{"version":3,"sources":["transfer.js"],"names":[],"mappingsfile":"app.js","sourcesContent":["import sendForm from './modules/_handleSubmit';\nimport Notify from './modules/_notify';\n\n$(() => {\n\n    $().alert();\n\n    $.validator.setDefaults({\n        errorElement: \"div\",\n        errorPlacement: (error, element) => {\n            error.addClass('invalid-feedback');\n            element.attr('type') === 'checkbox' ? error.insertAfter(element.parent('label')) : element.parent('.form-group').append(error);\n        },\n        highlight: (element) => {\n            $(element).addClass('is-invalid');\n        },\n        unhighlight: (element) => {\n            $(element).removeClass('is-invalid');\n        }\n    });\n\n    /**\n     * ### Form Transfer Money\n     */\n    let transferForm = $('#transfer');\n    let usersSelect  = $('#users');\n\n    transferForm.validate({\n        rules: {\n            users: {\n                required: true,\n            },\n\n            inn : {\n                required: true\n            }\n        },\n\n        submitHandler: () => {\n            alert('done');\n            return false;\n        }\n    });\n\n    usersSelect.select2({\n        ajax: {\n            url: usersSelect.data('url'),\n            dataType: 'json'\n        },\n        minimumInputLength: 1,\n        language : \"ru\"\n    });\n\n    /**\n     * ### Form Add User with inn\n     */\n    let modal       = $('#addUser');\n    let addUserForm = modal.find('form');\n\n    modal.find('[name=\"inn\"]').select2({\n        tags: true\n    });\n\n    modal.on('show.bs.modal', () => {\n        modal.find('.is-invalid').each(() => $(this).removeClass('is-invalid'));\n        modal.find('.invalid-feedback').text('');\n        modal.find('form')[0].reset();\n    });\n\n    addUserForm.validate({\n        rules: {\n            last_name: {\n                required: true,\n            },\n            first_name: {\n                required: true,\n            },\n            patronymic: {\n                required: true,\n            },\n            inn : {\n                required: true\n            }\n        },\n        submitHandler: () => {\n            sendForm(addUserForm, (data) => {\n                let notify = new Notify;\n\n                modal.modal('hide');\n                notify.show(data.message);\n            });\n            return false;\n        }\n    });\n\n\n    /**\n     * Button for trigger submit form\n     */\n    $('.done').on('click', (event) => {\n        let button = $(event.currentTarget);\n\n        button.closest('.modal-content').find('form').trigger('submit');\n    });\n});\n\n\n\n\n\n\n\n"]}